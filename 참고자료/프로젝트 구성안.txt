django 웹앱 출력형태
http://pythonstudy.xyz/Python/Django

차트 
d3, highcharts (시각화에서 사용해보기)

--- 영상 정보 ---
영상 댓글 -> 키워드 추천(워드클라우드 활용)

영상 댓글 -> 댓글 감성 분석
	* 현재 댓글 크롤링 및 불용어 처리 완료.
	* 유튜브 댓글의 특성이 영상의 평가가 보다는 영상을 보고 느낀점과 같은 개인적인 의견을 쓰기 때문에 수작업 라벨링이 잘 진행되지 않음 
	* 추후에수작업으로 라벨링 후 모델을 점차 업데이트
	* 완성되면 해당 영상의 퀄리티(선호도) 추출 가능

영상 태그 -> 인기 영상 키워드 분석 및 추천(추가 예정)
영상 카테고리 -> 카테고리별로 분류 하여 조회수 분석(추가 예정)

--- 채널 정보 ---
일일 누적 구독자, 일일 조회수 -> 조회수별 구독자 변화 측정(상관성 도출) 
	* 웹크롤링이 아닌 api 이용하여 데이터 수집하는 방법 조사

일일 업로드 영상 개수, 일일 조회수 -> 업로드 영상개수별 조회수 측정 및 분석(상관성 도출)

영상 길이, 영상 조회수 -> 영상길이별 조회수 측정(상관성 도출)

누적 구독자, 누적 조회수 -> 구독자 변화 분석(추이 예측)
	* 누적 구독자만 가지고 추이를 예상하면 오차가 누적되어 편차가 점점 심해진다.
	* 변화 추이를 예측하는 경우 정확한 예측은 힘들다.
	* 피처를 추가 생성하여 추이를 예측해야 합니다(피처 생성하는 법 조사하기. ex) 최근 7일 누적 구독자의 평균, 최근 7일 평균 조회수, 최근 7일 누적 조회수 평균 등... )
	* 웹크롤링이 아닌 api 이용하여 데이터 수집하는 방법 조사

영상 조회수, 추천 개수 -> 영상 품질 평가 
(0 ~ 1만) 0.95% / 2.3%
(1 ~ 10만) 1.2% / 2.6%
(10만 ~ 100만) 1.4% / 2.9%
(100만 ~ 500만) 1.2 % / 2.9%
(500만~ ) 1.1 % / 2.6%
